const n=()=>typeof globalThis.store<"u",i=e=>{if(!n()){console.warn("In-app purchase plugin no disponible (web).");return}const r=globalThis.store;r.verbosity=r.DEBUG,e.forEach(o=>{r.register({id:o,type:r.CONSUMABLE})}),r.when("ready").then(()=>{console.log("Store ready, productos:",r.products)}).catch(o=>console.warn("Store ready error",o)),r.refresh()},a=e=>new Promise((r,o)=>{if(!n())return o(new Error("Plugin de compras no disponible"));globalThis.store.order(e).then(s=>{console.log("Compra finalizada",s),r(s)}).catch(s=>{console.error("Error compra",s),o(s)})}),c=()=>new Promise((e,r)=>{if(!n())return r(new Error("Plugin de compras no disponible"));const o=globalThis.store;o.refresh(),o.when("ready").then(()=>e(o.products)).catch(r)});export{a as buyProduct,i as initPurchases,c as restorePurchases};
//# sourceMappingURL=purchaseService-Ch7OkBNR.js.map
